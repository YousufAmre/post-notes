{"version":3,"sources":["src/app/app.component.html","src/app/my-notes/my-notes.component.html","src/$_lazy_route_resource lazy namespace object","src/app/app.component.ts","src/app/app.module.ts","src/app/my-notes/my-notes.component.css","src/app/my-notes/my-notes.component.ts","src/app/my-notes/mynotes.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<body>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</body>\\r\\n\"","export default \"<mat-card class=\\\"new-note-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Post a New Note</mat-card-title>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <mat-card-content>\\r\\n    <form class=\\\"example-form\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Title</mat-label>\\r\\n        <input matInput placeholder=\\\"Title Name\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <mat-label>Description</mat-label>\\r\\n        <textarea matInput placeholder=\\\"Ex. It makes me feel...\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions>\\r\\n    <button mat-button>Post</button>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\\r\\n<div *ngFor=\\\"let note of notes\\\">\\r\\n  <br />\\r\\n  <mat-card class=\\\"note-card\\\">\\r\\n    <mat-card-header>\\r\\n\\r\\n      <mat-card-title>\\r\\n        Title: {{note.title}}<br />\\r\\n        Created On: {{formatDate(note.postedOn)}}\\r\\n      </mat-card-title>\\r\\n      \\r\\n    </mat-card-header>\\r\\n    \\r\\n    <mat-card-content>\\r\\n      <p>\\r\\n        {{note.description}}\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MyNotesComponent } from './my-notes/my-notes.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MynotesService } from './my-notes/mynotes.service';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyNotesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    FormsModule,    \r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: MyNotesComponent }\r\n    ]),\r\n    BrowserAnimationsModule\r\n    \r\n  ],\r\n  providers: [MynotesService, DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".note-card {\\r\\n  max-width: 1000px;\\r\\n  background-color: cornsilk;\\r\\n  color: black;\\r\\n}\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 1000px;\\r\\n  width: 100%;\\r\\n}\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n.new-note-card {\\r\\n  max-width: 1000px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktbm90ZXMvbXktbm90ZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQiwwQkFBMEI7RUFDMUIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLFdBQVc7QUFDYjtBQUVBO0VBQ0UsV0FBVztBQUNiO0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9teS1ub3Rlcy9teS1ub3Rlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdGUtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogY29ybnNpbGs7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubmV3LW5vdGUtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbn1cclxuIl19 */\"","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Note } from '../models/Note';\r\nimport { MynotesService } from './mynotes.service';\r\n\r\n@Component({\r\n  selector: 'app-my-notes',\r\n  templateUrl: './my-notes.component.html',\r\n  styleUrls: ['./my-notes.component.css']\r\n})\r\nexport class MyNotesComponent implements OnInit {\r\n\r\n  notes: Note[];\r\n  note: Note;\r\n  isCreated: boolean;\r\n\r\n  constructor(private _mynotesService: MynotesService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n    this.getNotes();\r\n  }\r\n\r\n  getNotes() {\r\n    this._mynotesService.getNotes().subscribe(\r\n      response => {\r\n        this.notes = response;\r\n      },\r\n      responseError => {\r\n        this.notes = null;\r\n        console.log(responseError);\r\n      }\r\n    );\r\n  }\r\n\r\n  createNote(note) {\r\n    this._mynotesService.postNote(note).subscribe(\r\n      response => {\r\n        if (response != null) {\r\n          this.isCreated = true;\r\n        }\r\n        else {\r\n          this.isCreated = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  formatDate(value) {\r\n    const date = new Date(value);\r\n    return this.datePipe.transform(date, 'dd/MM/yyyy');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Note } from '../models/Note';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MynotesService {\r\n\r\n  notes: Note[]\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getNotes(): Observable<Note[]> {\r\n    return this.http.get<Note[]>('https://localhost:5001/api/notes').pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  postNote(note: Note): Observable<Note> {\r\n    return this.http.post<Note>('https://localhost:5001/api/notes',note).pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) {\r\n    console.error(error);\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}